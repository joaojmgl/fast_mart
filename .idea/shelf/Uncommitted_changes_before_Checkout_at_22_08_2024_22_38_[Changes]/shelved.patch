Index: node_sequelize/src/controllers/CompanyController.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const Company = require( \"../models/Company\")\nconst Address = require( \"../models/Address\")\nconst Sequelize = require('sequelize');\nconst dbConfig = require('../config/database');\nconst {where} = require(\"sequelize\");\n\n\nconst sequelize = new Sequelize(dbConfig);\n\n\nmodule.exports = {\n    index: async function (req, res) {\n        try {\n            const company = await Company.findAll();\n            return res.json(company);\n        } catch (err) {\n            console.log(err);\n            return res.status(500).json({error: \"Internal server Error.\"});\n        }\n    },\n\n    async show(req, res) {\n        try {\n            const {company_id} = req.params;\n            const company = await Company.findOne({where:{id:company_id}})\n\n            if (!company) {\n                return res.status(404).send({\n                    status: 0,\n                    message: \"Empresa não existe\",\n                })\n            }\n            return res.status(200).send({\n                status: 1,\n                company,\n            })\n\n        } catch (err) {\n            console.log(err);\n            return res.status(500).send({\n                status: 0,\n                message:\"Internal server erro.\"\n            })\n        }\n    },\n\n    async store(req, res) {\n        try {\n            const {comp_name, comp_cnpj, comp_employees,address} = req.body;\n            const company = await Company.findOne({where:{comp_cnpj}})\n\n            // if (company) {\n            //     return res.status(422).json({message: `Company ${company_name} already exists.`})\n            // }\n            const comp_address = await Address.create(address)\n            const addresses_id = comp_address.id\n            console.log(addresses_id)\n            const new_company = await Company.create({\n                comp_name,\n                comp_cnpj,\n                addresses_id,\n                comp_employees,\n            });\n            return res.status(201).json(new_company);\n        } catch (err) {\n            console.log(err);\n            return res.status(500).json({error: \"Internal serve error.\"});\n        }\n    },\n    async update(req, res) {\n\n        const {company_name, comp_cnpj, comp_employees,comp_address} = req.body;\n        const {comp_id} = req.params;\n        const comp = await Company.findByPk(comp_id);\n        const {address_id} = comp_address.id\n        const address = await Address.update(comp_address,{\n            where:{id:address_id}\n            }\n        )\n        if (!comp) {\n            return res.status(404).send({\n                status: 0,\n                message: 'Empresa não encontrada.',\n            });\n        }\n\n        try {\n\n            let updateData = {company_name, comp_cnpj, comp_employees,addresses_id:address_id};\n\n            try {\n                await Company.update(updateData, {\n                    where: {\n                        id: comp_id\n                    }\n                });\n            } catch (err) {\n                return res.status(502).send({\n                    status: 0,\n                    message: \"Erro ao atualizar empresa.\",\n                    error: err.message\n                });\n            }\n\n            return res.status(200).send({\n                status: 1,\n                message: \"Empresa atualizado com sucesso!\",\n            });\n\n        } catch (err) {\n            return res.status(500).send({\n                status: 0,\n                message: \"Erro ao processar a atualização da empresa.\",\n                error: err.message\n            });\n        }\n    },\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_sequelize/src/controllers/CompanyController.js b/node_sequelize/src/controllers/CompanyController.js
--- a/node_sequelize/src/controllers/CompanyController.js	(revision 6475f8ac3669af931dce216370c0788f7deb4b5a)
+++ b/node_sequelize/src/controllers/CompanyController.js	(date 1724377097869)
@@ -58,8 +58,8 @@
             const new_company = await Company.create({
                 comp_name,
                 comp_cnpj,
-                addresses_id,
                 comp_employees,
+                addresses_id: comp_address.id
             });
             return res.status(201).json(new_company);
         } catch (err) {
